/* postcss-simple-vars */
$color: #000000;

body {
  /* postcss-mixins */
  @mixin flex row;

  /* postcss-modular-scale */
  font-size: ms(0)rem;

  /* postcss-will-change */
  will-change: transform;

  /* postcss-calc */
  width: calc($(s) + 10rem);

  /* postcss-color-function */
  /* postcss-hexrgba */
  /* postcss-color-rgba-fallback */
  color: color($color saturation(100%));
  background: color($color b(50%) saturation(50%));

  /* postcss-assets */
  /* background-position: width(png.png) calc(height(png.png) * 2); */
  /* background-image: resolve(png.png); */
  /* background-size: size(png.png); */

  /* postcss-custom-media */
  @media (--s) {
    position: relative;
  }

  /* postcss-conditionals */
  @if $s == 568 {
    padding-top: 2px;
  }

  /* postcss-nested */
  .nested {
    position: absolute;
  }

  /* postcss-for */
  @for $i from 1 to 5 by 2 {
    .b-$i { width: $(i)px; }
  }
}

/* postcss-selector-matches */
p:matches(.class1, .class2) {
  color: $color;
}

/* postcss-selector-not */
p:not(.class1, .class2) {
  background: $color;
}

/* lost */
@use lost;
.wrap {
  lost-flex-container: row;
}
.one-third {
  lost-column: 1/3;
}

/* cssnano */
h2, h2 {
  zindex: $z6;
}

@charset "utf-8";

h1, h1 {
  zindex: $z5;
}

@charset "utf-8";

.correct-order {
  flex-flow: wrap column;
  border: red solid 20px;
}
